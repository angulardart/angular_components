/*
 * Copyright (c) 2016, the Dart project authors.  Please see the AUTHORS file
 * for details. All rights reserved. Use of this source code is governed by a
 * BSD-style license that can be found in the LICENSE file.
 */

/*
 * NOTE: SASS files are not used during the build step of this package and are
 * provided as reference only. These .scss files were used to generate the
 * corresponding .css files in a separate process. We are working on a solution
 * to include CSS generation from SASS files during the build process.
 */

// These styles are based on the original material progress styles in
// go/spec https://spec.googleplex.com/quantum/components/progress-activity.html

// Leading zeros avoid confusion in the keyframes.
// scss-lint:disable LeadingZero

@import
'lib/src/css/material/material',
'compass/css3/animation',
'compass/css3/transform';

$indeterminate-duration: 2000ms;

:host {
  display: inline-block;
  width: 100%;
  height: $mat-grid-type;
}

.progress-container {
  position: relative;
  height: 100%;
  background-color: $mat-grey-300;
  overflow: hidden;

  :host-context([dir="rtl"]) & {
    transform: scaleX(-1);
  }
}

.progress-container.indeterminate {
  background-color: $mat-blue-100;
}

.progress-container.indeterminate > .secondary-progress {
  background-color: $mat-blue-500;
}

/*! @noflip */
.active-progress,
.secondary-progress {
  @include transform-origin(left, center);
  @include transform(scaleX(0));

  position: absolute;
  top: 0;
  transition: transform $mat-transition $mat-transition-fast-slow;
  right: 0;
  bottom: 0;
  left: 0;
  will-change: transform;
}

.active-progress {
  background-color: $mat-blue-500;
}

.secondary-progress {
  background-color: $mat-blue-200;
}

.progress-container.indeterminate.fallback > .active-progress {
  @include animation-name(indeterminate-active-progress);
  @include animation-duration($indeterminate-duration);
  @include animation-iteration-count(infinite);
  @include animation-timing-function(linear);
}

.progress-container.indeterminate.fallback > .secondary-progress {
  @include animation-name(indeterminate-secondary-progress);
  @include animation-duration($indeterminate-duration);
  @include animation-iteration-count(infinite);
  @include animation-timing-function(linear);
}

/*! @noflip */
@include keyframes(indeterminate-active-progress) {
  0% { @include transform(translate(0%) scaleX(0)); }
  25% { @include transform(translate(0%) scaleX(0.5)); }
  50% { @include transform(translate(25%) scaleX(0.75)); }
  75% { @include transform(translate(100%) scaleX(0)); }
  100% { @include transform(translate(100%) scaleX(0)); }
}

/*! @noflip */
@include keyframes(indeterminate-secondary-progress) {
  0% { @include transform(translate(0%) scaleX(0)); }
  60% { @include transform(translate(0%) scaleX(0)); }
  80% { @include transform(translate(0%) scaleX(0.6)); }
  100% { @include transform(translate(100%) scaleX(0.1)); }
}
